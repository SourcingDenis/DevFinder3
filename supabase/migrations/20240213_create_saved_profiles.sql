-- Create saved_profiles table
CREATE TABLE saved_profiles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    username TEXT NOT NULL,
    email TEXT,
    email_source TEXT CHECK(email_source IN ('github', 'twitter', 'linkedin', 'other')),  -- Explicitly define email_source column
    github_url TEXT,
    github_data JSONB,  -- Add github_data as JSONB
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    list_id BIGINT REFERENCES profile_lists(id) ON DELETE SET NULL,
    UNIQUE(user_id, username)
);

-- Enable Row Level Security
ALTER TABLE saved_profiles ENABLE ROW LEVEL SECURITY;

-- Create policies to restrict access
CREATE POLICY "Users can manage their own saved profiles" ON saved_profiles
    FOR ALL USING (auth.uid() = user_id);

-- Create indexes for faster queries
CREATE INDEX idx_saved_profiles_user_id ON saved_profiles(user_id);
CREATE INDEX idx_saved_profiles_username ON saved_profiles(username);
CREATE INDEX idx_saved_profiles_email ON saved_profiles(email);
CREATE INDEX idx_saved_profiles_email_source ON saved_profiles(email_source);
